[{"/Users/shirdecker/Desktop/Portfolio/portfolio/src/index.js":"1","/Users/shirdecker/Desktop/Portfolio/portfolio/src/reportWebVitals.js":"2","/Users/shirdecker/Desktop/Portfolio/portfolio/src/App.js":"3","/Users/shirdecker/Desktop/Portfolio/portfolio/src/components/snakeGame/index.js":"4","/Users/shirdecker/Desktop/Portfolio/portfolio/src/components/snakeGame/snakeGame.js":"5","/Users/shirdecker/Desktop/Portfolio/portfolio/src/components/snakeGame/constants.js":"6","/Users/shirdecker/Desktop/Portfolio/portfolio/src/components/snakeGame/useInterval.js":"7","/Users/shirdecker/Desktop/Portfolio/portfolio/src/components/SnakeGame/index.js":"8","/Users/shirdecker/Desktop/Portfolio/portfolio/src/components/SnakeGame/SnakeGame.js":"9","/Users/shirdecker/Desktop/Portfolio/portfolio/src/components/SnakeGame/constants.js":"10","/Users/shirdecker/Desktop/Portfolio/portfolio/src/components/SnakeGame/useInterval.js":"11","/Users/shirdecker/Desktop/Portfolio/portfolio/src/components/Ticker/Ticker.js":"12","/Users/shirdecker/Desktop/Portfolio/portfolio/src/components/Contact/ContactUs.js":"13","/Users/shirdecker/Desktop/Dev/portfolio/src/index.js":"14","/Users/shirdecker/Desktop/Dev/portfolio/src/App.js":"15","/Users/shirdecker/Desktop/Dev/portfolio/src/reportWebVitals.js":"16","/Users/shirdecker/Desktop/Dev/portfolio/src/components/Contact/ContactUs.js":"17","/Users/shirdecker/Desktop/Dev/portfolio/src/components/SnakeGame/SnakeGame.js":"18","/Users/shirdecker/Desktop/Dev/portfolio/src/components/Ticker/Ticker.js":"19","/Users/shirdecker/Desktop/Dev/portfolio/src/components/SnakeGame/useInterval.js":"20","/Users/shirdecker/Desktop/Dev/portfolio/src/components/SnakeGame/constants.js":"21","/Users/shirdecker/Desktop/Dev/portfolio/src/components/Eyes/Eyes.js":"22"},{"size":500,"mtime":1610454053586,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1610454053588,"results":"25","hashOfConfig":"24"},{"size":1030,"mtime":1610550460346,"results":"26","hashOfConfig":"24"},{"size":151,"mtime":1610469151464,"results":"27","hashOfConfig":"24"},{"size":2799,"mtime":1610469224021,"results":"28","hashOfConfig":"24"},{"size":341,"mtime":1610468859329,"results":"29","hashOfConfig":"24"},{"size":500,"mtime":1610468910545,"results":"30","hashOfConfig":"24"},{"size":130,"mtime":1610469431954,"results":"31","hashOfConfig":"24"},{"size":3528,"mtime":1610500938591,"results":"32","hashOfConfig":"24"},{"size":341,"mtime":1610539055313,"results":"33","hashOfConfig":"24"},{"size":500,"mtime":1610468910545,"results":"34","hashOfConfig":"24"},{"size":713,"mtime":1610537972171,"results":"35","hashOfConfig":"24"},{"size":1008,"mtime":1610556823834,"results":"36","hashOfConfig":"24"},{"size":500,"mtime":1610559710152,"results":"37","hashOfConfig":"38"},{"size":1134,"mtime":1610881076918,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":1610559710153,"results":"40","hashOfConfig":"38"},{"size":1008,"mtime":1610559710150,"results":"41","hashOfConfig":"38"},{"size":3571,"mtime":1610696461095,"results":"42","hashOfConfig":"38"},{"size":713,"mtime":1610578750115,"results":"43","hashOfConfig":"38"},{"size":470,"mtime":1610881545790,"results":"44","hashOfConfig":"38"},{"size":341,"mtime":1610563530536,"results":"45","hashOfConfig":"38"},{"size":1276,"mtime":1610702506197,"results":"46","hashOfConfig":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1x1amxq",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"xafwb9",{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shirdecker/Desktop/Portfolio/portfolio/src/index.js",[],["96","97"],"/Users/shirdecker/Desktop/Portfolio/portfolio/src/reportWebVitals.js",[],"/Users/shirdecker/Desktop/Portfolio/portfolio/src/App.js",[],"/Users/shirdecker/Desktop/Portfolio/portfolio/src/components/snakeGame/index.js",[],"/Users/shirdecker/Desktop/Portfolio/portfolio/src/components/snakeGame/snakeGame.js",[],"/Users/shirdecker/Desktop/Portfolio/portfolio/src/components/snakeGame/constants.js",[],["98","99"],"/Users/shirdecker/Desktop/Portfolio/portfolio/src/components/snakeGame/useInterval.js",[],"/Users/shirdecker/Desktop/Portfolio/portfolio/src/components/SnakeGame/index.js",[],["100","101"],"/Users/shirdecker/Desktop/Portfolio/portfolio/src/components/SnakeGame/SnakeGame.js",[],"/Users/shirdecker/Desktop/Portfolio/portfolio/src/components/SnakeGame/constants.js",[],"/Users/shirdecker/Desktop/Portfolio/portfolio/src/components/SnakeGame/useInterval.js",[],"/Users/shirdecker/Desktop/Portfolio/portfolio/src/components/Ticker/Ticker.js",[],"/Users/shirdecker/Desktop/Portfolio/portfolio/src/components/Contact/ContactUs.js",[],"/Users/shirdecker/Desktop/Dev/portfolio/src/index.js",[],["102","103"],"/Users/shirdecker/Desktop/Dev/portfolio/src/App.js",["104"],"/Users/shirdecker/Desktop/Dev/portfolio/src/reportWebVitals.js",[],"/Users/shirdecker/Desktop/Dev/portfolio/src/components/Contact/ContactUs.js",[],"/Users/shirdecker/Desktop/Dev/portfolio/src/components/SnakeGame/SnakeGame.js",["105"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { useInterval } from \"./useInterval\";\nimport {\n  CANVAS_SIZE,\n  SNAKE_START,\n  APPLE_START,\n  SCALE,\n  SPEED,\n  DIRECTIONS,\n} from \"./constants\";\n\nconst SnakeGame = () => {\n  const canvasRef = useRef();\n  const [snake, setSnake] = useState(SNAKE_START);\n  const [apple, setApple] = useState(APPLE_START);\n  const [dir, setDir] = useState([0, -1]);\n  const [speed, setSpeed] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [startButton, setStartButton] = useState(true);\n\n  useInterval(() => gameLoop(), speed);\n\n  const endGame = () => {\n    setSpeed(null);\n    setGameOver(true);\n    setStartButton(true);\n  };\n\n  const moveSnake = ({ keyCode }) =>\n    keyCode >= 37 && keyCode <= 40 && setDir(DIRECTIONS[keyCode]);\n\n  const createApple = () =>\n    apple.map((_a, i) => Math.floor(Math.random() * (CANVAS_SIZE[i] / SCALE)));\n\n  const checkCollision = (piece, snk = snake) => {\n    if (\n      piece[0] * SCALE >= CANVAS_SIZE[0] ||\n      piece[0] < 0 ||\n      piece[1] * SCALE >= CANVAS_SIZE[1] ||\n      piece[1] < 0\n    )\n      return true;\n\n    for (const segment of snk) {\n      if (piece[0] === segment[0] && piece[1] === segment[1]) return true;\n    }\n    return false;\n  };\n\n  const checkAppleCollision = (newSnake) => {\n    if (newSnake[0][0] === apple[0] && newSnake[0][1] === apple[1]) {\n      let newApple = createApple();\n      while (checkCollision(newApple, newSnake)) {\n        newApple = createApple();\n      }\n      setApple(newApple);\n      return true;\n    }\n    return false;\n  };\n\n  const gameLoop = () => {\n    const snakeCopy = JSON.parse(JSON.stringify(snake));\n    const newSnakeHead = [snakeCopy[0][0] + dir[0], snakeCopy[0][1] + dir[1]];\n    snakeCopy.unshift(newSnakeHead);\n    if (checkCollision(newSnakeHead)) endGame();\n    if (!checkAppleCollision(snakeCopy)) snakeCopy.pop();\n    setSnake(snakeCopy);\n  };\n\n  const startGame = () => {\n    setSnake(SNAKE_START);\n    setApple(APPLE_START);\n    setDir([0, -1]);\n    setSpeed(SPEED);\n    setStartButton(false);\n    setGameOver(false);\n  };\n\n  useEffect(() => {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.setTransform(SCALE, 0, 0, SCALE, 0, 0);\n    context.clearRect(0, 0, window.innerWidth, window.innerHeight);\n    context.fillStyle = \"black\";\n    snake.forEach(([x, y]) => context.fillRect(x, y, 1, 1));\n    context.fillStyle = \"#ff8100\";\n    context.fillRect(apple[0], apple[1], 1, 1);\n  }, [snake, apple, gameOver]);\n\n  return (\n    <div role=\"button\" style={{ outline: \"none\", border: \"none\" }} tabIndex=\"0\" onKeyDown={(e) => moveSnake(e)}>\n      <canvas\n        style={{ outline: \"none\", border: \"none\"  }}\n        id=\"snakeGame\"\n        ref={canvasRef}\n        width={`${CANVAS_SIZE[0]}px`}\n        height={`${CANVAS_SIZE[1]}px`}\n      />\n      {/* {gameOver && <div className=\"gameover\">TRY AGAIN!</div>} */}\n      {gameOver && <div className=\"gameover\">\n        <span className=\"char1\">T</span>\n        <span className=\"char2\">R</span>\n        <span className=\"char3\">Y</span>\n        <span className=\"char4\"> </span>\n        <span className=\"char5\">A</span>\n        <span className=\"char6\">G</span>\n        <span className=\"char7\">A</span>\n        <span className=\"char8\">I</span>\n        <span className=\"char9\">N</span>\n        <span className=\"char10\">!</span>\n        </div>}\n\n      {startButton && (\n        <div className=\"button\" className=\"button\" onClick={startGame}>\n          play\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SnakeGame;\n","/Users/shirdecker/Desktop/Dev/portfolio/src/components/Ticker/Ticker.js",[],"/Users/shirdecker/Desktop/Dev/portfolio/src/components/SnakeGame/useInterval.js",[],"/Users/shirdecker/Desktop/Dev/portfolio/src/components/SnakeGame/constants.js",[],"/Users/shirdecker/Desktop/Dev/portfolio/src/components/Eyes/Eyes.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"106","replacedBy":"110"},{"ruleId":"108","replacedBy":"111"},{"ruleId":"106","replacedBy":"112"},{"ruleId":"108","replacedBy":"113"},{"ruleId":"106","replacedBy":"114"},{"ruleId":"108","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":5,"column":8,"nodeType":"118","messageId":"119","endLine":5,"endColumn":12},{"ruleId":"120","severity":1,"message":"121","line":114,"column":33,"nodeType":"122","endLine":114,"endColumn":51},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],["123"],["124"],["123"],["124"],["123"],["124"],"no-unused-vars","'Eyes' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]